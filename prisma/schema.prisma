// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum Status {
  BLOCK
  ACTIVE
  PENDING
}

enum Role {
  USER
  SHOP
  ADMIN
}

enum Rank {
  BRONZE
  SIRVEL
  GOLD
  DIAMOND
}

enum StatusNotification {
  SEEN
  UNREAD
}

enum StatusAddress {
  BLOCK
  ACTIVE
}
//USER 


model User {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  phone String?
  password String
  name String? 
  image String? 
  email String? @unique
  sex Boolean? 
  birthDay DateTime?
  defaultAddressId String? @default("")
  createDate DateTime @default(now())
  updateDate DateTime @default(now())
  code Int?
  codeExpiry DateTime?
  refreshToken String?
  status Status @default(PENDING)
  role Role @default(USER)
  rank Rank @default(BRONZE)
  point Int @default(0)

  addressIdList String[] @default([])
  orderIdList String[] @default([])
  reviewIdList String[] @default([])

  shopFollowIdList String[] @default([])
  productFavoriteIdList String[] @default([])
  notificationIdList String[] @default([])

  reportIdList String[] @default([])

  shopId String?

  @@map("user")

}

model Address {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String
  phone String
  city Json
  district Json
  ward Json
  apartment String
  userId String
  status StatusAddress @default(ACTIVE)

  @@map("address")

}

model Shop {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  image String?
  describeShop String?
  addressShop String?
  phoneShop String?
  createDate DateTime? @default(now())
  updateDate DateTime? @default(now())
  active Boolean? @default(true)
  userId String

  userFollowIdList String[] @default([])
  productIdList String[] @default([])
  orderIdList String[] @default([])
  bannerIdList String[] @default([])
  discountIdList String[] @default([])

  @@map("shop")
}

model Notification {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  describe String
  image String
  status StatusNotification @default(UNREAD)
  createDate DateTime @default(now())
  updateDate DateTime @default(now())

  @@map("notification")
}


//CATEGORY

model Category {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String
  previousId String?
  categoryIdClIST String[] @default([])
  originIdList String[] @default([])
  brandIdList String[] @default([])
  styleIdList String[] @default([])
  optionIdList String[] @default([])
  productIdList String[] @default([])

  @@map("category")
}

model Origin {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  @@map("origin")
}

model Brand {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  @@map("brand")
}

model Material {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  @@map("material")
}

model Styles {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  @@map("styles")
}

model Type{
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  categoryId String

  @@map("type")
}


//PRODUCT

model Product {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String 
  active Boolean @default(true)

  materialId String?
  originId String?
  styleId String?
  brandId Json?

  materialOrther String?
  originOrther String?
  styleOrther String?
  brandOrther String?
  describe String?
  createDate DateTime? @default(now())
  updateDate DateTime? @default(now())
  price Float?
  image String?

  reportIdList String[] @default([])
  userFavoriteIdList String[] @default([])
  productCIdList String[] @default([])
  reviewIdList String[] @default([])

  //{"color":"[red,green,blue]","size":"[M,L,XL]"}
  options Json?

  categoryId String?
  shopId String?

  @@map("product")

}


model ProductDetail {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  price Float?
  name String?
  images String[] @default([])
  quantity Int?
  numberSold Int?

  productId String?
  discountId String?
  orderDetailIdList String[] @default([])

  //[red,M] 
  option1 String?
  option2 String?

  @@map("productDetail")
}


//DISCOUNT 

model Discount {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  percent Float
  name String
  createDate DateTime @default(now())
  updateDate DateTime @default(now())
  expired DateTime
  productDetailId String
  shopId String

  @@map("discount")
}


//ORDER

model Orders {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  createDate DateTime @default(now())
  updateDate DateTime @default(now())

  orderDetailIdList String[] @default([])
  userId String
  shopId String

  @@map("orders")
}

model OrderDetail {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  price Float
  reduce Float
  quantity Int
  priceShip Float

  orderId String
  productDetailId String

  @@map("orderDetail")
}

//Review

model Review {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  content String
  rate Float

  userId String?
  productId String?

  @@map("review")
}

//BANNER

model Banner {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  image String
  link String
  shopId String

  @@map("banner")
}

//REPORT
model ReportProduct {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  productId String
  describe String

  @@map("reportProduct")
}





